{"ast":null,"code":"var _jsxFileName = \"/Users/jordan/Desktop/8-bit-visualizer/src/components/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport '../styles/App.css'; // custom components\n\nimport Output from './Output';\nimport Input from './Input';\n\nfunction App() {\n  const [userInput, setUserInput] = useState('');\n  const [bits, setBits] = useState([0, 0, 0, 0, 0, 0, 0, 0]);\n  const values = [128, 64, 32, 16, 8, 4, 2, 1];\n  useEffect(() => {\n    let n = userInput;\n    let newBits = bits;\n\n    for (let i = 0; i < values.length; i++) {\n      console.log(0);\n\n      if (n >= values[i]) {\n        newBits[i] = 1;\n        n -= values[i];\n      }\n    } // setBits(newBits)\n\n\n    console.log('n = ', n);\n    console.log('bits = ', bits);\n  });\n\n  const handleUserInputChange = value => {\n    setUserInput(value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"AppWrapper\\t\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }\n  }, \"8-bit Visualizer\"), /*#__PURE__*/React.createElement(Output, {\n    bits: bits,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    userInput: userInput,\n    handleUserInputChange: handleUserInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jordan/Desktop/8-bit-visualizer/src/components/App.js"],"names":["React","useState","useEffect","Output","Input","App","userInput","setUserInput","bits","setBits","values","n","newBits","i","length","console","log","handleUserInputChange","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,mBAAP,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,SAASC,GAAT,GAAe;AACd,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAAD,CAAhC;AACA,QAAMS,MAAM,GAAG,CAAC,GAAD,EAAM,EAAN,EAAU,EAAV,EAAc,EAAd,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,CAAf;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIS,CAAC,GAAGL,SAAR;AACA,QAAIM,OAAO,GAAGJ,IAAd;;AAEA,SAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAAM,CAACI,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACvCE,MAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;;AACA,UAAIL,CAAC,IAAID,MAAM,CAACG,CAAD,CAAf,EAAoB;AACnBD,QAAAA,OAAO,CAACC,CAAD,CAAP,GAAa,CAAb;AACAF,QAAAA,CAAC,IAAID,MAAM,CAACG,CAAD,CAAX;AACA;AACD,KAVc,CAYf;;;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBL,CAApB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBR,IAAvB;AACA,GAhBQ,CAAT;;AAkBA,QAAMS,qBAAqB,GAAGC,KAAK,IAAI;AACtCX,IAAAA,YAAY,CAACW,KAAD,CAAZ;AACA,GAFD;;AAIA,sBACC;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADD,eAEC,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEV,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,eAGC,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEF,SAAlB;AAA6B,IAAA,qBAAqB,EAAEW,qBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,CADD;AAOA;;AAED,eAAeZ,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport '../styles/App.css'\n\n// custom components\nimport Output from './Output'\nimport Input from './Input'\n\nfunction App() {\n\tconst [userInput, setUserInput] = useState('')\n\tconst [bits, setBits] = useState([0, 0, 0, 0, 0, 0, 0, 0])\n\tconst values = [128, 64, 32, 16, 8, 4, 2, 1]\n\n\tuseEffect(() => {\n\t\tlet n = userInput\n\t\tlet newBits = bits\n\n\t\tfor (let i = 0; i < values.length; i++) {\n\t\t\tconsole.log(0)\n\t\t\tif (n >= values[i]) {\n\t\t\t\tnewBits[i] = 1\n\t\t\t\tn -= values[i]\n\t\t\t}\n\t\t}\n\n\t\t// setBits(newBits)\n\n\t\tconsole.log('n = ', n)\n\t\tconsole.log('bits = ', bits)\n\t})\n\n\tconst handleUserInputChange = value => {\n\t\tsetUserInput(value)\n\t}\n\n\treturn (\n\t\t<div className=\"AppWrapper\t\">\n\t\t\t<h1 className=\"Title\">8-bit Visualizer</h1>\n\t\t\t<Output bits={bits} />\n\t\t\t<Input userInput={userInput} handleUserInputChange={handleUserInputChange} />\n\t\t</div>\n\t)\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}